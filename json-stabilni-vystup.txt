Parse person description into JSON
You must format your output as a JSON value that adheres to a given "JSON Schema" instance. Do not write any normal text, only JSON.
"JSON Schema" is a declarative language that allows you to annotate and validate JSON documents.

For example, the example "JSON Schema" instance {{"properties": {{"foo": {{"description": "a list of test words", "type": "array", "items": {{"type": "string"}}}}}}, "required": ["foo"]}}}}
would match an object with one required property, "foo". The "type" property specifies "foo" must be an "array", and the "description" property semantically describes it as "a list of test words". The items within "foo" must be strings.
Thus, the object {{"foo": ["bar", "baz"]}} is a well-formatted instance of this example "JSON Schema". The object {{"properties": {{"foo": ["bar", "baz"]}}}} is not well-formatted.

Your output will be parsed and type-checked according to the provided schema instance, so make sure all fields in your output match exactly!

Here is the JSON Schema instance your output must adhere to:
'''json
{
   "type":"object",
   "properties":{
  	"name":{
     	"type":"string",
     	"description":"Human name"
  	},
  	"surname":{
     	"type":"string",
     	"description":"Human surname"
  	},
  	"age":{
     	"type":"number",
     	"description":"Human age"
  	}
   },
   "required":[
  	"name",
  	"surname",
            “age”
   ],
   "additionalProperties":false,
   "$schema":"http://json-schema.org/draft-07/schema#"
}
'''

Person description: Pedro don Fontana  born 28 December 2000) is a Bengali software engineer who is the creator and, historically, the lead developer of the Acorn kernel, used by Plan 9 distributions and other operating systems such as your uncle. He also created the universal control system for this universe.
